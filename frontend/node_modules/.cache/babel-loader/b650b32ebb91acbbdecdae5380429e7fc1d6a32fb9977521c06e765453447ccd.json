{"ast":null,"code":"var _jsxFileName = \"/Users/unmesh/Desktop/295B/avrs-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport RobotCard from './components/RobotCard';\nimport RobotDetails from './components/RobotDetails';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [robots, setRobots] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setRobots(data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Robot Information Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"robot-container\",\n        children: robots.map(robot => /*#__PURE__*/_jsxDEV(RobotCard, {\n          robot: robot\n        }, robot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), robots.map(robot => /*#__PURE__*/_jsxDEV(Route, {\n          path: `/${robot.id}`,\n          children: /*#__PURE__*/_jsxDEV(RobotDetails, {\n            robot: robots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, robot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3S4TYWHJTS5Wkf8KrOuaroOdCBs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","RobotCard","RobotDetails","jsxDEV","_jsxDEV","App","_s","robots","setRobots","fetch","then","response","json","data","catch","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","robot","id","exact","path","_c","$RefreshReg$"],"sources":["/Users/unmesh/Desktop/295B/avrs-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport RobotCard from './components/RobotCard';\nimport RobotDetails from './components/RobotDetails';\nimport './App.css';\n\nfunction App() {\n  const [robots, setRobots] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(data => setRobots(data))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>Robot Information Dashboard</h1>\n        <div className=\"robot-container\">\n          {robots.map(robot => (\n            <RobotCard key={robot.id} robot={robot} />\n          ))}\n        </div>\n        <Routes>\n          <Route exact path=\"/\">\n            <App></App>\n          </Route>\n          {robots.map(robot => (\n            <Route key={robot.id} path={`/${robot.id}`}>\n              <RobotDetails robot={robots} />\n            </Route>\n          ))}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACN,MAAM;IAAAoB,QAAA,eACLd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBd,OAAA;QAAAc,QAAA,EAAI;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpCnB,OAAA;QAAKe,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC7BX,MAAM,CAACiB,GAAG,CAACC,KAAK,iBACfrB,OAAA,CAACH,SAAS;UAAgBwB,KAAK,EAAEA;QAAM,GAAvBA,KAAK,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNnB,OAAA,CAACJ,MAAM;QAAAkB,QAAA,gBACLd,OAAA,CAACL,KAAK;UAAC4B,KAAK;UAACC,IAAI,EAAC,GAAG;UAAAV,QAAA,eACnBd,OAAA,CAACC,GAAG;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAO;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL,EACPhB,MAAM,CAACiB,GAAG,CAACC,KAAK,iBACfrB,OAAA,CAACL,KAAK;UAAgB6B,IAAI,EAAG,IAAGH,KAAK,CAACC,EAAG,EAAE;UAAAR,QAAA,eACzCd,OAAA,CAACF,YAAY;YAACuB,KAAK,EAAElB;UAAO;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG,GADrBE,KAAK,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEb;AAACjB,EAAA,CAhCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}