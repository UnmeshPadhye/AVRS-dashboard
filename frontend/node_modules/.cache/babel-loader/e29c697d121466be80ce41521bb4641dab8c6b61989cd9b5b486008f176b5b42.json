{"ast":null,"code":"var _jsxFileName = \"/Users/unmesh/Desktop/295B/avrs-dashboard/src/components/CameraFeed.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraFeed = () => {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const constraints = {\n      video: true\n    };\n    const success = stream => {\n      setStream(stream);\n    };\n    const failure = error => {\n      setError(true);\n      console.error(error);\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Video not available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n      style: {\n        maxWidth: '100%'\n      },\n      autoPlay: true,\n      playsInline: true,\n      muted: true,\n      ref: video => {\n        if (video && stream) {\n          video.srcObject = stream;\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraFeed, \"XH0VhPiJYiW70fPHUhssHWpO5Lw=\");\n_c = CameraFeed;\nexport default CameraFeed;\nvar _c;\n$RefreshReg$(_c, \"CameraFeed\");","map":{"version":3,"names":["React","Link","useParams","Header","useState","useEffect","jsxDEV","_jsxDEV","CameraFeed","_s","stream","setStream","error","setError","constraints","video","success","failure","console","navigator","mediaDevices","getUserMedia","then","catch","getTracks","forEach","track","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","autoPlay","playsInline","muted","ref","srcObject","_c","$RefreshReg$"],"sources":["/Users/unmesh/Desktop/295B/avrs-dashboard/src/components/CameraFeed.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport Header from './Header';\n\nimport { useState, useEffect } from 'react';\n\nconst CameraFeed = () => {\n    const [stream, setStream] = useState(null);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const constraints = {\n            video: true,\n        };\n\n        const success = (stream) => {\n            setStream(stream);\n        };\n\n        const failure = (error) => {\n            setError(true);\n            console.error(error);\n        };\n\n        navigator.mediaDevices\n            .getUserMedia(constraints)\n            .then(success)\n            .catch(failure);\n\n        return () => {\n            if (stream) {\n                stream.getTracks().forEach((track) => track.stop());\n            }\n        };\n    }, []);\n\n    return (\n        <div>\n            {error ? (\n                <p>Video not available</p>\n            ) : (\n                <video\n                    style={{ maxWidth: '100%' }}\n                    autoPlay\n                    playsInline\n                    muted\n                    ref={(video) => {\n                        if (video && stream) {\n                            video.srcObject = stream;\n                        }\n                    }}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default CameraFeed;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAG;MAChBC,KAAK,EAAE;IACX,CAAC;IAED,MAAMC,OAAO,GAAIN,MAAM,IAAK;MACxBC,SAAS,CAACD,MAAM,CAAC;IACrB,CAAC;IAED,MAAMO,OAAO,GAAIL,KAAK,IAAK;MACvBC,QAAQ,CAAC,IAAI,CAAC;MACdK,OAAO,CAACN,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC;IAEDO,SAAS,CAACC,YAAY,CACjBC,YAAY,CAACP,WAAW,CAAC,CACzBQ,IAAI,CAACN,OAAO,CAAC,CACbO,KAAK,CAACN,OAAO,CAAC;IAEnB,OAAO,MAAM;MACT,IAAIP,MAAM,EAAE;QACRA,MAAM,CAACc,SAAS,EAAE,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,EAAE,CAAC;MACvD;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAAqB,QAAA,EACKhB,KAAK,gBACFL,OAAA;MAAAqB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAE1BzB,OAAA;MACI0B,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAC5BC,QAAQ;MACRC,WAAW;MACXC,KAAK;MACLC,GAAG,EAAGvB,KAAK,IAAK;QACZ,IAAIA,KAAK,IAAIL,MAAM,EAAE;UACjBK,KAAK,CAACwB,SAAS,GAAG7B,MAAM;QAC5B;MACJ;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAET;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACvB,EAAA,CAjDID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}